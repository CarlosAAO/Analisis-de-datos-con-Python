# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yMhd-_puOV5VIGzeQEM993mqpB6hIQZc
"""

# COMENTARIO

"""negrita: ** texto destacado **
cursiva: _ cursiva _

"""

# tipo de dato entero
a = 4
a



# tipo de dato float
b = 5/2
b

c = a+b
d = a-b
e = a*b
f = a/b
print(c)
print(d)
print(e)
print(f)

"HOLA MUNDO"

nombre="Carlos"
print("mi nombre es "+nombre)

lista = ['pan','leche','arroz','azucar']
print(lista)
type(lista)

print(lista[2])

lista.append("naranja")
print(lista)

#Importemos algunas de las librerías más clásicas para el manejo de datos en Python

#Pandas es la librería básica para la manipulación y análisis de datos
import pandas as pd

#Numpy es la biblioteca para crear vectores y matrices, además de un conjunto grande de funciones matemáticas
import numpy as np

#Seaborn es una librería que usamos para graficar
import seaborn as sns

#Statsmodels es la biblioteca para realizar modelos
import statsmodels.formula.api as smf

df_nations = pd.read_csv("https://raw.githubusercontent.com/DireccionAcademicaADL/Nations-DB/main/nations.csv", encoding="ISO-8859-1")
df_nations

df_nations.head()

df_nations.tail()

df_nations.drop(columns=["Unnamed: 0"], inplace = True)

df_nations.head()

df_nations.columns

df_nations["country"]

df_nations["gdppesos"]=df_nations["gdp"]*850

df_nations.head()

df_nations["descripcion"]="A"

df_nations.head()

df_nations.info()

# calcula indicadores estadisticos basicos
df_nations.describe()

df_nations["gini"].describe()

df_nations["gini"],["gdp"].describe()

df_nations["gini"].mean()

df_nations["region"].value_counts()

df_nations.groupby(["region"])[["country"]].count()

df_nations.groupby(["region"])["country"].count()

df_nations["co2_promedio"] = np.where(df_nations["co2"] > df_nations["co2"].mean(), 1 , 0)

df_nations.head()

df_nations["co2_promedio"].value_counts()

df_nations["co2_promedio"].value_counts()[1]

df_nations["co2_promedio"].value_counts("%")

#filtros
df_nations[df_nations["region"] == "Africa"]

df_africa = df_nations[df_nations["region"] == "Africa"]

df_africa

df_nations[df_nations["region"] == "Europe"]

df_europa=df_nations[df_nations["region"] == "Europe"]

df_africa["literacy"].mean()

df_europa["literacy"].mean()

# graficos
# histograma
sns.displot(df_nations["gini"], kind="hist")

import matplotlib.pyplot as plt

sns.displot(df_nations["gini"], kind="hist")
plt.axvline(df_nations["gini"].mean(), color="tomato")

media_europa = df_europa["chldmort"].mean()
media_africa = df_africa["chldmort"].mean()

media_africa

#Grafico de Barra
sns.barplot(x=["Europa", "Africa"], y=[media_europa, media_africa] )

media_america = df_nations[df_nations["region"]=="Americas"]["literacy"].mean()

media_america

media_resto = df_nations[df_nations["region"]!="Americas"]["literacy"].mean()
media_resto

sns.barplot(x=["America", "Resto Mundo"], y=[media_america, media_resto] )

sns.boxplot(x=df_nations["region"], y=df_nations["school"])

# limpiar el dataset
df_limpia = df_nations.dropna()
df_limpia

sns.scatterplot(x=df_limpia["school"], y=df_limpia["literacy"])

cor = df_nations.corr()
cor

sns.heatmap(cor)

plt.rcParams["figure.figsize"]=(7,7)
sns.heatmap(cor, cmap="Greens", annot=True)

modelo1 = smf.ols("gdp ~ co2", data=df_limpia)

modelo1 =modelo1.fit()

modelo1.summary()

